apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: campanha-microservice-hpa
  namespace: ingress-nginx
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: campanha-microservice-deployment
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: campanha-microservice-deployment
  namespace: ingress-nginx
  labels:
    app: campanha-microservice
spec:
  selector:
    matchLabels:
      app: campanha-microservice
      tier: web
  replicas: 3 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: campanha-microservice
        tier: web
    spec:
      containers:
      - name: campanha-microservice-container
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: fezinhadasorte-secret-db
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: fezinhadasorte-secret-db
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: fezinhadasorte-secret-db
              key: database
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: fezinhadasorte-secret-db
              key: db_host
        - name: SECRET_KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fezinhadasorte-secret-key-store
              key: secret_keystore_password
        - name: SECRET_KEY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fezinhadasorte-secret-key
              key: secret_key_password
        image: INIT_IMAGE_NAME # Image that will be used to containers in the cluster
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8443 # The port that the container is running on in the cluster
            protocol: TCP
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: campanha-microservice-clusterip-service
  namespace: ingress-nginx
spec:
  selector:
    app: campanha-microservice
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8080
    - name: https-api
      port: 8443
      protocol: TCP
      targetPort: 8080
    - name: http-api
      port: 80
      protocol: TCP
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-nginx-fezinhadasorte-api
  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.static-ip-name: fezinhadasorte-ip-external
    cert-manager.io/cluster-issuer: letsencrypt-fezinhadasorte-cluster-issuer
    nginx.ingress.kubernates.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
  labels:
    app: campanha-microservice
spec:
  ingressClassName: nginx
  rules:
  - host: www.fezinhadasorte.com
    http:
      paths:
      - backend:
          service:
            name: campanha-microservice-clusterip-service
            port:
              number: 80
        path: /api
        pathType: Prefix
  - host: fezinhadasorte.com
    http:
      paths:
      - backend:
          service:
            name: campanha-microservice-clusterip-service
            port:
              number: 80
        path: /api
        pathType: Prefix
  tls:
  - hosts:
    - www.fezinhadasorte.com
    - fezinhadasorte.com
    secretName: letsencrypt-fezinhadasorte
---
apiVersion: v1
kind: Secret
metadata:
  name: fezinhadasorte-secret-db
  namespace: ingress-nginx
type: Opaque
data:
  db_host: MTAuMTUuMTEzLjM=
  database: ZmV6aW5oYV9kYV9zb3J0ZQ==
  password: dGVzdDEyMw==
  username: cG9zdGdyZXM=
---
apiVersion: v1
kind: Secret
metadata:
  name: fezinhadasorte-secret-key-store
  namespace: ingress-nginx
type: Opaque
data:
  secret_keystore_password: bGhiZzg3MDQxNQ==
---
apiVersion: v1
kind: Secret
metadata:
  name: fezinhadasorte-secret-key
  namespace: ingress-nginx
type: Opaque
data:
  secret_key_password: bGhiZzg3MDQxNQ==

